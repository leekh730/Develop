<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http use-expressions="true">
		<!-- intercept-url pattern="/member/edit" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/member/*" access="permitAll" / -->
		<intercept-url pattern="/**" access="permitAll" />

		<form-login login-page="/authorities/loginForm"
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/authorities/loginForm?fail=true" 
			username-parameter="email"
			password-parameter="password" />
		<logout logout-success-url="/" logout-url="/logout" delete-cookies="JSESSIONID" />
		<!-- enable csrf protection -->
		<csrf disabled="true" />
	</http>

	<beans:bean id="customAuthenticationProvider" class="com.mahau.incubate.dao.CustomizeJdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="rolePrefix" value="" />
		<beans:property name="usersByUsernameQuery"
			value="SELECT MEMBERID, EMAIL, PASSWORD, MEMBERNAME, ENABLED FROM T_MEMBERS WHERE EMAIL=?" />
		<beans:property name="authoritiesByUsernameQuery"
			value="SELECT AUTHORITYID FROM T_ROLES WHERE MEMBERID=?" />
		<beans:property name="enableGroups" value="false" />
	</beans:bean>

	<authentication-manager>
		<authentication-provider user-service-ref="customAuthenticationProvider" />
	</authentication-manager>


</beans:beans>